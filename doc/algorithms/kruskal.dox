/*!

Алгоритм Крускала с системой непересекающихся множеств. Сложность: O(M log N), где M - число рёбер, N - число вершин.
Дан взвешенный неориентированный граф. Требуется найти такое поддерево этого графа,
которое бы соединяло все его вершины, и при этом обладало наименьшим весом (т.е. суммой весов рёбер) из всех возможных.
Такое поддерево называется минимальным остовным деревом или простом минимальным остовом.

vector<pair<int,int>> Kruskal(vector<pair<int,pair<int,int>>> g, int numVertices);

Пример использования:

vector<pair<int,pair<int,int>>> input =
{
  {1, {1, 2}}, // {вес, {вершина1, вершина2}}
  {1, {1, 3}},
  {2, {2, 4}},
  {3, {2, 5}},
  {4, {2, 3}},
  {1, {5, 6}},
  {5, {3, 6}},
  {2, {3, 7}}
};

int numVertices = 7; // число вершин

vector<pair<int,int>> output = Kruskal(input, numVertices);

for (pair<int,int> e : output) {
  cout << "{" << e.first << ", " << e.second << "}" << endl;
}
    
Результат:

{1, 2} //{вершина1, вершина2}
{1, 3}
{5, 6}
{2, 4}
{3, 7}
{2, 5}

*/
